/*
=======================================
üß† –®–ü–ê–†–ì–ê–õ–ö–ê: Map –≤ JavaScript
=======================================

üìå –ß—Ç–æ —Ç–∞–∫–æ–µ Map:
Map ‚Äî –∫–æ–ª–ª–µ–∫—Ü–∏—è –ø–∞—Ä "–∫–ª—é—á ‚Üí –∑–Ω–∞—á–µ–Ω–∏–µ", –≥–¥–µ:
- –ö–ª—é—á–∏ –º–æ–≥—É—Ç –±—ã—Ç—å –ª—é–±–æ–≥–æ —Ç–∏–ø–∞ (–æ–±—ä–µ–∫—Ç—ã, —Ñ—É–Ω–∫—Ü–∏–∏, —á–∏—Å–ª–∞ –∏ —Ç.–¥.)
- –ü–æ—Ä—è–¥–æ–∫ –≤—Å—Ç–∞–≤–∫–∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è
- –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —É–¥–æ–±–Ω—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã

=======================================
‚úÖ –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã

const map = new Map();

map.set(key, value);      // –î–æ–±–∞–≤–ª—è–µ—Ç –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç —ç–ª–µ–º–µ–Ω—Ç
map.get(key);             // –ü–æ–ª—É—á–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ –∫–ª—é—á—É
map.has(key);             // –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–∞
map.delete(key);          // –£–¥–∞–ª—è–µ—Ç —ç–ª–µ–º–µ–Ω—Ç –ø–æ –∫–ª—é—á—É
map.clear();              // –£–¥–∞–ª—è–µ—Ç –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã
map.size;                 // –ö–æ–ª-–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤

map.entries();            // –ò—Ç–µ—Ä–∞—Ç–æ—Ä –ø–∞—Ä [–∫–ª—é—á, –∑–Ω–∞—á–µ–Ω–∏–µ]
map.keys();               // –ò—Ç–µ—Ä–∞—Ç–æ—Ä –ø–æ –∫–ª—é—á–∞–º
map.values();             // –ò—Ç–µ—Ä–∞—Ç–æ—Ä –ø–æ –∑–Ω–∞—á–µ–Ω–∏—è–º
map.forEach((v, k) => {});// –ü–µ—Ä–µ–±–æ—Ä —ç–ª–µ–º–µ–Ω—Ç–æ–≤

=======================================
üß™ –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:

const map = new Map();

map.set('name', 'Alice');
map.set(123, 'ID');
map.set(true, 'Active');

console.log(map.get('name')); // Alice
console.log(map.has(123));    // true
map.delete(true);
console.log(map.size);        // 2

=======================================
üîÅ –ò—Ç–µ—Ä–∞—Ü–∏—è –ø–æ Map:

for (const [key, value] of map) {
  console.log(key, value);
}

map.forEach((value, key) => {
  console.log(`${key}: ${value}`);
});

for (const key of map.keys()) console.log(key);
for (const value of map.values()) console.log(value);
for (const [key, value] of map.entries()) console.log(key, value);

=======================================
üîÑ –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ:

// Map ‚Üí Object
const obj = Object.fromEntries(map);

// Object ‚Üí Map
const map2 = new Map(Object.entries(obj));

=======================================
üöÄ –û—Ç–ª–∏—á–∏–µ –æ—Ç –æ–±—ä–µ–∫—Ç–∞ {}:

| –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å            | Map | {} –æ–±—ä–µ–∫—Ç |
|------------------------|-----|-----------|
| –ö–ª—é—á–∏ –ª—é–±–æ–≥–æ —Ç–∏–ø–∞      | ‚úÖ  | ‚ùå —Å—Ç—Ä–æ–∫–∏/—Å–∏–º–≤–æ–ª—ã |
| –ü–æ—Ä—è–¥–æ–∫ –≤—Å—Ç–∞–≤–∫–∏        | ‚úÖ  | üö´ –Ω–µ –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω |
| –ë—ã—Å—Ç—Ä–∞—è –∏—Ç–µ—Ä–∏—Ä—É–µ–º–æ—Å—Ç—å  | ‚úÖ  | üö´ —Å–ª–æ–∂–Ω–µ–µ |
| –ú–µ—Ç–æ–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã      | ‚úÖ  | üö´ Object.keys –∏ —Ç.–ø. |

=======================================
üìç –ü—Ä–∏–º–µ—Ä —Å –æ–±—ä–µ–∫—Ç–∞–º–∏ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∫–ª—é—á–µ–π:

const user = { id: 1 };
const map = new Map();

map.set(user, 'logged in');
console.log(map.get(user)); // 'logged in'

=======================================
‚ö†Ô∏è –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:

- –ù–µ —Å–µ—Ä–∏–∞–ª–∏–∑—É–µ—Ç—Å—è –≤ JSON –Ω–∞–ø—Ä—è–º—É—é:
  JSON.stringify(new Map()); // "{}"
- –ö–ª—é—á–∏ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã –∫ —Ç–∏–ø—É:
  map.set('1', 'a') !== map.set(1, 'b')
- –ü–æ–ª–µ–∑–µ–Ω –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –∫—ç—à–µ–º, –∏–Ω–¥–µ–∫—Å–∞–º–∏, –≥—Ä–∞—Ñ–∞–º–∏ –∏ —Ç.–ø.*/
